2015-08-03  victor  <victor@vityok>

	* src/aho-corasick.lisp after adding type declarations and forcing
	the iter macro to declare its internal variables the search-tabac
	function slightly outperforms multiple BMH searches of the same
	random patterns.

2015-07-23  victor  <victor@vityok>

	* all: all implementations check-type of the given data in
	interfacing functions.

2015-07-10  victor  <victor@vityok>

	* src/suffix-tree.lisp avoid :conc-name in structure definitions
	becase they are not handled appropriately by ABCL and probably
	ECL.

	* src/boyer-moore-horspool.lisp now uses ctypecase guards before
	calling implementations to avoid misinforming compiler and avoid
	random crashes. Will be implemented in other functions as well.

	* src/aho-corasick.lisp will be dealing with only one match a
	time, unlike the original algorithm. search-ac will return just
	one matching mark.

2015-07-02  victor  <victor@vityok>

	* src/aho-corasick.lisp was not implementing fail transitions of
	the Aho-Corasick algorithm. While adding its implementation the
	Trie building code got unique node ids, and we are now using ITER
	in some places.

2015-06-24  victor  <victor@vityok>

	* src/boyer-moore.lisp now implements the Boyer-Moore algorithm
	similar to the one described by Christian Charras and Thierry
	Lecroq. Unlike a lot of other implementations this uses bad char
	AND good suffix shift tables: important for Commentz-Walter
	algorithm implementation.

2015-06-23  victor  <victor@vityok>

	* src/boyer-moore.lisp had the Boyer-Moore-Horspool algorithm
	implemented, not the Boyer-Moore as declared in the comments,
	README, and everywhere else. This was discovered while working on
	the implementation of the Commentz-Walter algorithm.
